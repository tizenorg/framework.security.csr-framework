CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
SET(PACKAGE_NAME csr-framework)
SET(LIB_NAME secfw)
PROJECT(${LIB_NAME} C)
SET(PREFIX ${CMAKE_INSTALL_PREFIX})
SET(EXEC_PREFIX "\${prefix}")
SET(LIBDIR "\${prefix}/lib")
SET(INCLUDEDIR "\${prefix}/include")
SET(VERSION 0.1)

SET(TEST_ROOT "${CMAKE_SOURCE_DIR}/test")
SET(TEST_CONTENTS "${TEST_ROOT}/testcontents")
SET(TEST_SCRIPT "${TEST_ROOT}/scripts")
SET(TEST_INSTALL_ROOT "local/compatibility-test")

SET(SRCS
    framework/TCSImpl.c
    framework/TWPImpl.c
)

SET(TCS_SRCS
    test/SampleInfo.c
    test/TCSTest.c
    test/TCSTestUtils.c
)


SET(TWP_SRCS
    test/TWPTest.c
    test/TWPTestUtils.c
    test/XMHttp.c
    test/XMPHttp.c
)


INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/framework ${CMAKE_SOURCE_DIR}/test)

FOREACH(flag ${pkgs_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)

# Compiler flags
SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -pthread ")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS}")

ADD_DEFINITIONS("-Werror")
ADD_DEFINITIONS("-Wall")
ADD_DEFINITIONS("-DPREFIX=\"${PREFIX}\"")
ADD_DEFINITIONS("-DFACTORYFS=\"$ENV{FACTORYFS}\"")
ADD_DEFINITIONS("-DDATAFS=\"$ENV{DATADIR}\"")

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRCS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS} "-ldl")

ADD_EXECUTABLE(tcstest ${TCS_SRCS})
ADD_EXECUTABLE(twptest ${TWP_SRCS})
TARGET_LINK_LIBRARIES(tcstest ${PROJECT_NAME} ${pkgs_LDFLAGS})
TARGET_LINK_LIBRARIES(twptest ${PROJECT_NAME} ${pkgs_LDFLAGS})

INSTALL(TARGETS ${LIB_NAME} DESTINATION lib)
INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/framework/TCSErrorCodes.h DESTINATION include)
INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/framework/TCSImpl.h DESTINATION include)
INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/framework/TWPImpl.h DESTINATION include)

INSTALL(TARGETS tcstest twptest DESTINATION sbin)
FILE(GLOB files "${TEST_SCRIPT}/*.sh")
INSTALL(FILES ${files} DESTINATION ${TEST_INSTALL_ROOT})
FILE(GLOB files "${TEST_CONTENTS}/*.*")
INSTALL(FILES ${files} DESTINATION ${TEST_INSTALL_ROOT}/testcontents)

SET(PC_NAME ${PACKAGE_NAME})
SET(PC_CFLAGS -I\${includedir})
SET(PC_LDFLAGS -l${LIB_NAME})

CONFIGURE_FILE(
    ${PACKAGE_NAME}.pc.in
    ${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}.pc
    @ONLY
)

INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}.pc DESTINATION lib/pkgconfig)

